version: 2
jobs:
    test:
        machine:
            image: ubuntu-1604:201903-01
        environment:
            TZ: "/usr/share/zoneinfo/America/Los_Angeles"
            DEBIAN_FRONTEND: "noninteractive"
        steps:
            - run: sudo add-apt-repository -y ppa:ondrej/php
            - run: sudo apt-get update
            - run: sudo apt-get -y install git unzip zlib1g-dev sudo php7.2 php7.2-mbstring php7.2-zip php7.2-xml php7.2-xdebug php7.2-curl php7.2-sqlite
            - checkout
            - run:
                name: Install LDAP
                command: |
                    sudo DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-suggests --no-install-recommends install ldap-utils slapd php7.2-ldap ; \
                    sudo service slapd stop ; \
                    sudo rm /etc/ldap/slapd.d/* -R ; \
                    sudo slapadd -n 0 -F /etc/ldap/slapd.d -l ./developerEnv/ldap-test-database/ldif/ldap-test-ubuntudatabase-config.ldif ; \
                    sudo slapadd -n 1 -l ./home/paul/PhpstormProjects/ScoTooBo/developerEnv/ldap-test-database/ldif/ldap-test-database-data.ldif ; \
                    sudo chown openldap:openldap /etc/ldap/slapd.d/ -R ; \
                    sudo chown openldap:openldap /var/lib/ldap/ -R ; \
                    sudo service slapd start
            - run: rm var/data/data.sqlite
            - run: cp developerEnv/mysql-test-database/data.sqlite var/data/data.sqlite
            - run: sudo phpenmod pdo_sqlite
            - run: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
            - run: php composer.phar install --no-interaction --dev
            - run: ./vendor/bin/phpunit
            - run: CODECLIMATE_REPO_TOKEN=1332fe188e0bb31283eeed1c18696c4e1a4b4be231ff9393e569c8b02a2f73d7 ./vendor/bin/test-reporter
    build:
        docker:
        - image: circleci/buildpack-deps
        steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Login to docker
            command: |
              docker login -u $DOCKER_USER -p $DOCKER_PASS
        - run:
              name: Build application Docker image
              command: |
                  docker-compose build --no-cache
        - run:
              name: Push docker images
              command: |
                docker push pbnl/scotoobo-php
                docker push pbnl/scotoobo-nginx
workflows:
    version: 2
    test_and_build:
        jobs:
        - test
        - build:
              filters:
                branches:
                  only:
                  - master